{"version":3,"sources":["./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/environments/environment.ts","./src/app/task.service.ts","./src/app/pages/edit-list/edit-list.component.ts","./src/app/pages/edit-list/edit-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/signup-page/signup-page.component.ts","./src/app/pages/signup-page/signup-page.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/web-req.interceptor.ts","./src/app/web-request.service.ts","./src/app/pages/edit-task/edit-task.component.ts","./src/app/pages/edit-task/edit-task.component.html","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { List } from 'src/app/models/list.model';\r\n\r\n@Component({\r\n  selector: 'app-task-view',\r\n  templateUrl: './task-view.component.html',\r\n  styleUrls: ['./task-view.component.scss']\r\n})\r\nexport class TaskViewComponent implements OnInit {\r\n\r\n  lists: List[];\r\n  tasks: Task[];\r\n\r\n  selectedListId: string;\r\n\r\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        if (params.listId) {\r\n          this.selectedListId = params.listId;\r\n          this.taskService.getTasks(params.listId).subscribe((tasks: Task[]) => {\r\n            this.tasks = tasks;\r\n          })\r\n        } else {\r\n          this.tasks = undefined;\r\n        }\r\n      }\r\n    )\r\n\r\n    this.taskService.getLists().subscribe((lists: List[]) => {\r\n      this.lists = lists;\r\n    })\r\n    \r\n  }\r\n\r\n  onTaskClick(task: Task) {\r\n    // we want to set the task to completed\r\n    this.taskService.complete(task).subscribe(() => {\r\n      // the task has been set to completed successfully\r\n      console.log(\"Completed successully!\");\r\n      task.completed = !task.completed;\r\n    })\r\n  }\r\n\r\n  onDeleteListClick() {\r\n    this.taskService.deleteList(this.selectedListId).subscribe((res: any) => {\r\n      this.router.navigate(['/lists']);\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  onDeleteTaskClick(id: string) {\r\n    this.taskService.deleteTask(this.selectedListId, id).subscribe((res: any) => {\r\n      this.tasks = this.tasks.filter(val => val._id !== id);\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"task-manager-container\">\r\n\r\n    <div class=\"sidebar has-background-white\">\r\n      <h1 class=\"title has-text-primary\">\r\n        Lists\r\n      </h1>\r\n\r\n      <div class=\"list-menu\">\r\n        <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists', list._id]\" routerLinkActive=\"is-active\">\r\n          <p>{{ list.title }}</p>\r\n        </a>\r\n\r\n      </div>\r\n\r\n      <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"task-list-container has-background-light\">\r\n      <div *ngIf=\"tasks\">\r\n        <div class=\"top-bar\">\r\n          <h1 class=\"title has-text-primary\">\r\n            Tasks\r\n          </h1>\r\n          <div class=\"dropdown is-hoverable is-right\">\r\n            <div class=\"dropdown-trigger\">\r\n              <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\">\r\n                <span class=\"icon is-small\">\r\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\r\n              <div class=\"dropdown-content\">\r\n                <a [routerLink]=\"['/edit-list', selectedListId]\" class=\"dropdown-item\">\r\n                  Edit\r\n                </a>\r\n                <a (click)=\"onDeleteListClick()\" class=\"dropdown-item has-text-danger\">\r\n                  Delete\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Task Elements -->\r\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\r\n          <div class=\"task-text\">\r\n            <p>{{ task.title }}</p>\r\n          </div>\r\n          <div class=\"task-buttons\">\r\n\r\n            <button class=\"button\" [routerLink]=\"['/lists', selectedListId, 'edit-task', task._id]\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </div>\r\n            </button>\r\n\r\n            <button class=\"button is-danger\" (click)=\"onDeleteTaskClick(task._id)\" style=\"margin-left: 10px;\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </div>\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks here! Click the add button to create\r\n          a new task.</h3>\r\n\r\n        <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\r\n          <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\">\r\n        </button>\r\n      </div>\r\n\r\n      <div *ngIf=\"!tasks\">\r\n        <h3 class=\"empty-state-text\">Please select a list from the sidebar</h3>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginButtonClicked(email: string, password: string) {\r\n    this.authService.login(email, password).subscribe((res: HttpResponse<any>) => {\r\n      if (res.status === 200) {\r\n        // we have logged in successfully\r\n        this.router.navigate(['/lists']);\r\n      }\r\n      console.log(res);\r\n      \r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"white-box\">\r\n\r\n    <h1 class=\"title has-text-primary\">Login</h1>\r\n    \r\n    <div class=\"field\">\r\n      <p class=\"control has-icons-left has-icons-right\">\r\n        <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\r\n        <span class=\"icon is-small is-left\">\r\n          <i class=\"fas fa-envelope\"></i>\r\n        </span>\r\n      </p>\r\n    </div>\r\n    <div class=\"field\">\r\n      <p class=\"control has-icons-left\">\r\n        <input #pwInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\r\n        <span class=\"icon is-small is-left\">\r\n          <i class=\"fas fa-lock\"></i>\r\n        </span>\r\n      </p>\r\n    </div>\r\n    <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\r\n      <p class=\"control\">\r\n        <button class=\"button is-success has-text-white\" (click)=\"onLoginButtonClicked(emailInput.value, pwInput.value)\">\r\n          Login\r\n        </button>\r\n      </p>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <p class=\"has-text-grey\">Not got an account? <a routerLink=\"/signup\">Sign up</a> now!</p>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-new-task',\r\n  templateUrl: './new-task.component.html',\r\n  styleUrls: ['./new-task.component.scss']\r\n})\r\nexport class NewTaskComponent implements OnInit {\r\n\r\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  listId: string;\r\n  \r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        this.listId = params['listId'];\r\n      }\r\n    )\r\n  }\r\n\r\n  createTask(title: string) {\r\n    this.taskService.createTask(title, this.listId).subscribe((newTask: Task) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"modal-box\">\r\n    <h1 class=\"title\">\r\n      Create a new task\r\n    </h1>\r\n\r\n    <input #taskTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter task name...\">\r\n    <br><br>\r\n    <div class=\"buttons is-right\">\r\n      <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\r\n      <button class=\"button is-primary has-text-white is-medium\" (click)=\"createTask(taskTitleInput.value)\">Create</button>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { WebRequestService } from './web-request.service';\r\nimport { Task } from './models/task.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  constructor(private webReqService: WebRequestService) { }\r\n\r\n\r\n  getLists() {\r\n    return this.webReqService.get('lists');\r\n  }\r\n\r\n  createList(title: string) {\r\n    // We want to send a web request to create a list\r\n    return this.webReqService.post('lists', { title });\r\n  }\r\n\r\n  updateList(id: string, title: string) {\r\n    // We want to send a web request to update a list\r\n    return this.webReqService.patch(`lists/${id}`, { title });\r\n  }\r\n\r\n  updateTask(listId: string, taskId: string, title: string) {\r\n    // We want to send a web request to update a list\r\n    return this.webReqService.patch(`lists/${listId}/tasks/${taskId}`, { title });\r\n  }\r\n\r\n  deleteTask(listId: string, taskId: string) {\r\n    return this.webReqService.delete(`lists/${listId}/tasks/${taskId}`);\r\n  }\r\n\r\n  deleteList(id: string) {\r\n    return this.webReqService.delete(`lists/${id}`);\r\n  }\r\n\r\n  getTasks(listId: string) {\r\n    return this.webReqService.get(`lists/${listId}/tasks`);\r\n  }\r\n\r\n  // getTask(listId: string, taskId: string) {\r\n  //   return this.webReqService.get(`lists/${listId}/getTask/${taskId}`);\r\n  // }\r\n\r\n  createTask(title: string, listId: string) {\r\n    // We want to send a web request to create a task\r\n    return this.webReqService.post(`lists/${listId}/tasks`, { title });\r\n  }\r\n\r\n  complete(task: Task) {\r\n    return this.webReqService.patch(`lists/${task._listId}/tasks/${task._id}`, {\r\n      completed: !task.completed\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { TaskService } from 'src/app/task.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-list',\r\n  templateUrl: './edit-list.component.html',\r\n  styleUrls: ['./edit-list.component.scss']\r\n})\r\nexport class EditListComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private taskService: TaskService, private router: Router) { }\r\n\r\n  listId: string;\r\n\r\n  \r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        this.listId = params.listId;\r\n        console.log(params.listId);\r\n      }\r\n    )\r\n  }\r\n\r\n  updateList(title: string) {\r\n    this.taskService.updateList(this.listId, title).subscribe(() => {\r\n      this.router.navigate(['/lists', this.listId]);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n    <div class=\"modal-box\">\r\n      <h1 class=\"title\">\r\n        Edit list\r\n      </h1>\r\n  \r\n      <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter list name...\">\r\n      <br><br>\r\n      <div class=\"buttons is-right\">\r\n        <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\r\n        <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateList(listTitleInput.value)\">Save</button>\r\n      </div>\r\n  \r\n      \r\n    </div>\r\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.scss']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSignupButtonClicked(email: string, password: string) {\r\n    this.authService.signup(email, password).subscribe((res: HttpResponse<any>) => {\r\n      console.log(res);\r\n      this.router.navigate(['/lists']);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"white-box\">\r\n\r\n    <h1 class=\"title has-text-primary\">Sign up</h1>\r\n    \r\n    <div class=\"field\">\r\n      <p class=\"control has-icons-left has-icons-right\">\r\n        <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\r\n        <span class=\"icon is-small is-left\">\r\n          <i class=\"fas fa-envelope\"></i>\r\n        </span>\r\n      </p>\r\n    </div>\r\n    <div class=\"field\">\r\n      <p class=\"control has-icons-left\">\r\n        <input #pwInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\r\n        <span class=\"icon is-small is-left\">\r\n          <i class=\"fas fa-lock\"></i>\r\n        </span>\r\n      </p>\r\n    </div>\r\n    <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\r\n      <p class=\"control\">\r\n        <button class=\"button is-success has-text-white\" (click)=\"onSignupButtonClicked(emailInput.value, pwInput.value)\">\r\n          Sign up\r\n        </button>\r\n      </p>\r\n    </div>\r\n    <br>\r\n\r\n    <p class=\"has-text-grey\">Already got an account? <a routerLink=\"/login\">Login</a> now!</p>\r\n\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\r\nimport { NewListComponent } from './pages/new-list/new-list.component';\r\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\r\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\r\n\r\nimport { WebReqInterceptor } from './web-req.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskViewComponent,\r\n    NewListComponent,\r\n    NewTaskComponent,\r\n    LoginPageComponent,\r\n    SignupPageComponent,\r\n    EditListComponent,\r\n    EditTaskComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: WebReqInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { WebRequestService } from './web-request.service';\r\nimport { Router } from '@angular/router';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private webService: WebRequestService, private router: Router, private http: HttpClient) { }\r\n\r\n  login(email: string, password: string) {\r\n    return this.webService.login(email, password).pipe(\r\n      shareReplay(),\r\n      tap((res: HttpResponse<any>) => {\r\n        // the auth tokens will be in the header of this response\r\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\r\n        console.log(\"LOGGED IN!\");\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  signup(email: string, password: string) {\r\n    return this.webService.signup(email, password).pipe(\r\n      shareReplay(),\r\n      tap((res: HttpResponse<any>) => {\r\n        // the auth tokens will be in the header of this response\r\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\r\n        console.log(\"Successfully signed up and now logged in!\");\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n  logout() {\r\n    this.removeSession();\r\n\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getAccessToken() {\r\n    return localStorage.getItem('x-access-token');\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem('x-refresh-token');\r\n  }\r\n\r\n  getUserId() {\r\n    return localStorage.getItem('user-id');\r\n  }\r\n\r\n  setAccessToken(accessToken: string) {\r\n    localStorage.setItem('x-access-token', accessToken)\r\n  }\r\n  \r\n  private setSession(userId: string, accessToken: string, refreshToken: string) {\r\n    localStorage.setItem('user-id', userId);\r\n    localStorage.setItem('x-access-token', accessToken);\r\n    localStorage.setItem('x-refresh-token', refreshToken);\r\n  }\r\n\r\n  private removeSession() {\r\n    localStorage.removeItem('user-id');\r\n    localStorage.removeItem('x-access-token');\r\n    localStorage.removeItem('x-refresh-token');\r\n  }\r\n\r\n  getNewAccessToken() {\r\n    return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`, {\r\n      headers: {\r\n        'x-refresh-token': this.getRefreshToken(),\r\n        '_id': this.getUserId()\r\n      },\r\n      observe: 'response'\r\n    }).pipe(\r\n      tap((res: HttpResponse<any>) => {\r\n        this.setAccessToken(res.headers.get('x-access-token'));\r\n      })\r\n    )\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, empty, Subject } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { catchError, tap, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebReqInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  refreshingAccessToken: boolean;\r\n\r\n  accessTokenRefreshed: Subject<any> = new Subject();\r\n\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    // Handle the request\r\n    request = this.addAuthHeader(request);\r\n\r\n    // call next() and handle the response\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.log(error);\r\n\r\n        if (error.status === 401) {\r\n          // 401 error so we are unauthorized\r\n\r\n          // refresh the access token\r\n          return this.refreshAccessToken()\r\n            .pipe(\r\n              switchMap(() => {\r\n                request = this.addAuthHeader(request);\r\n                return next.handle(request);\r\n              }),\r\n              catchError((err: any) => {\r\n                console.log(err);\r\n                this.authService.logout();\r\n                return empty();\r\n              })\r\n            )\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n\r\n  refreshAccessToken() {\r\n    if (this.refreshingAccessToken) {\r\n      return new Observable(observer => {\r\n        this.accessTokenRefreshed.subscribe(() => {\r\n          // this code will run when the access token has been refreshed\r\n          observer.next();\r\n          observer.complete();\r\n        })\r\n      })\r\n    } else {\r\n      this.refreshingAccessToken = true;\r\n      // we want to call a method in the auth service to send a request to refresh the access token\r\n      return this.authService.getNewAccessToken().pipe(\r\n        tap(() => {\r\n          console.log(\"Access Token Refreshed!\");\r\n          this.refreshingAccessToken = false;\r\n          this.accessTokenRefreshed.next();\r\n        })\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  addAuthHeader(request: HttpRequest<any>) {\r\n    // get the access token\r\n    const token = this.authService.getAccessToken();\r\n\r\n    if (token) {\r\n      // append the access token to the request header\r\n      return request.clone({\r\n        setHeaders: {\r\n          'x-access-token': token\r\n        }\r\n      })\r\n    }\r\n    return request;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebRequestService {\r\n\r\n  readonly ROOT_URL;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.ROOT_URL = '';\r\n  }\r\n\r\n  get(uri: string) {\r\n    return this.http.get(`${uri}`);\r\n  }\r\n\r\n  post(uri: string, payload: Object) {\r\n    return this.http.post(`${uri}`, payload);\r\n  }\r\n\r\n  patch(uri: string, payload: Object) {\r\n    return this.http.patch(`${uri}`, payload);\r\n  }\r\n\r\n  delete(uri: string) {\r\n    return this.http.delete(`${uri}`);\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post(`users/login`, {\r\n      email,\r\n      password\r\n    }, {\r\n        observe: 'response'\r\n      });\r\n  }\r\n\r\n  signup(email: string, password: string) {\r\n    return this.http.post(`users`, {\r\n      email,\r\n      password\r\n    }, {\r\n        observe: 'response'\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { TaskService } from 'src/app/task.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss']\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private taskService: TaskService, private router: Router) { }\r\n\r\n  taskId: string;\r\n  listId: string;\r\n\r\n  \r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        this.taskId = params.taskId;\r\n        this.listId = params.listId;\r\n      }\r\n    )\r\n  }\r\n\r\n  updateTask(title: string) {\r\n    this.taskService.updateTask(this.listId, this.taskId, title).subscribe(() => {\r\n      this.router.navigate(['/lists', this.listId]);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n    <div class=\"modal-box\">\r\n      <h1 class=\"title\">\r\n        Edit task\r\n      </h1>\r\n  \r\n      <input #taskTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter task name...\">\r\n      <br><br>\r\n      <div class=\"buttons is-right\">\r\n        <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\r\n        <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateTask(taskTitleInput.value)\">Save</button>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { Router } from '@angular/router';\r\nimport { List } from 'src/app/models/list.model';\r\n\r\n@Component({\r\n  selector: 'app-new-list',\r\n  templateUrl: './new-list.component.html',\r\n  styleUrls: ['./new-list.component.scss']\r\n})\r\nexport class NewListComponent implements OnInit {\r\n\r\n  constructor(private taskService: TaskService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createList(title: string) {\r\n    this.taskService.createList(title).subscribe((list: List) => {\r\n      console.log(list);\r\n      // Now we navigate to /lists/task._id\r\n      this.router.navigate([ '/lists', list._id ]); \r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"modal-box\">\r\n    <h1 class=\"title\">\r\n      Create a new list\r\n    </h1>\r\n\r\n    <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter list name...\">\r\n    <br><br>\r\n    <div class=\"buttons is-right\">\r\n      <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\r\n      <button class=\"button is-primary has-text-white is-medium\" (click)=\"createList(listTitleInput.value)\">Create</button>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\r\nimport { NewListComponent } from './pages/new-list/new-list.component';\r\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\r\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/lists', pathMatch: 'full' },\r\n  { path: 'new-list', component: NewListComponent },\r\n  { path: 'edit-list/:listId', component: EditListComponent },\r\n  { path: 'login', component: LoginPageComponent },\r\n  { path: 'signup', component: SignupPageComponent },\r\n  { path: 'lists', component: TaskViewComponent },\r\n  { path: 'lists/:listId', component: TaskViewComponent },\r\n  { path: 'lists/:listId/new-task', component: NewTaskComponent },\r\n  { path: 'lists/:listId/edit-task/:taskId', component: EditTaskComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}